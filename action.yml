name: "Static analysis for C++/Python project"
description: "Static analysis with cppcheck & clang-tidy for C++, pylint for Python. Posts results to PRs or console."

inputs:
  github_token:
    description: 'Github token used for Github API requests'
    default: ${{ github.token }}
  pr_num:
    description: 'Pull request number for which the comment will be created'
    default: ${{ github.event.pull_request.number }}
  repo:
    description: 'Repository name'
    default: ${{ github.repository }}
  pr_repo:
    description: 'Head repository (This is useful when using Action with [pull_request_target])'
    default: ${{ github.event.pull_request.head.repo.full_name }}
  pr_head:
    description: 'Head (branch) for PR (same as `pr_repo` input, useful with [pull_request_target]'
    default: ${{ github.event.pull_request.head.ref }}
  comment_title:
    description: 'Title for comment with the raport. This should be an unique name'
    default: Static analysis result
  exclude_dir:
    description: 'Directories (space separated) which should be excluded from the raport'
  apt_pckgs:
    description: 'Additional (space separated) packages that need to be installed in order for project to compile'
  compile_commands:
    description: 'User generated compile_commands.json'
  compile_commands_replace_prefix:
    description: 'Whether we should replace the prefix of files inside user generated compile_commands.json file'
    default: false
  init_script:
    description: |
      'Optional shell script that will be run before configuring project (i.e. running CMake command).'
      'This should be used, when the project requires some environmental set-up beforehand'
      'Script will be run with 2 arguments: `root_dir`(root directory of user's code) and `build_dir`(build directory created for running SA)'
      'Note. `apt_pckgs` will run before this script, just in case you need some packages installed'
      'Also this script will be run in the root of the project (`root_dir`)'
  cppcheck_args:
    description: 'cppcheck (space separated) arguments that will be used'
    default: --enable=all --suppress=missingIncludeSystem --inline-suppr --inconclusive
  clang_tidy_args:
    description: 'clang-tidy arguments that will be used (example: -checks="*,fuchsia-*,google-*,zircon-*"'
  report_pr_changes_only:
    description: 'Only post the issues found within the changes introduced in this Pull Request'
    default: false
  use_cmake:
    description: 'Determines wether CMake should be used to generate compile_commands.json file'
    default: true
  cmake_args:
    description: 'Additional CMake arguments'
  force_console_print:
    description: 'Output the action result to console, instead of creating the comment'
    default: false
  verbose:
    description: 'Verbose output. Used for debugging'
    default: false
  language:
    description: 'Programming language to check for. Supported languages are: C++/Python'
    default: C++
  pylint_args:
    description: 'PyLint options'
  python_dirs:
    description: 'Directories containing python files to be checked'

runs:
  using: "docker"
  image: "Dockerfile"

branding:
  icon: "book-open"
  color: "white"
